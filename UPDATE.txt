Author : Pravin

------------------------------------------------UPDATES------------------------------------------------

1. Created prompt.py which holds the prompts that yields desired output
2. Implemented dynamic formatting of the output and displayed it in the "results-container" div as required
3. Implemented throttling to prevent excess calls to the api in a very short period of time.
4. Modified and simplified the app.py file by Modularisation and making it easy to read and understand
5. Moved the API_KEY in .env file for secure storage of api key
6. Organised the whole project in clean way for easy navigation and grouping of similar files
7. Reduced the lines of code in index.html  from ~300 to <240 by shifting the java scripts in separate files for easy management and cleaner code
8. Improved the index.html in general with minor fixes
9. Made it compulsory to enter all the fields on the form to get better insights
10. Followed coding best practices like error handling and exception handling and separation of concerns where possible  
11. Fixed the startCountdown function to work as expected over multiple calls
12. Put route handlers in separate folder called controllers for better management and cleaner code of app.py
13. Changed vars to const wherever required
14. Gathered assets like missing images
15. Modified generate_response_bmu function to make the system actually retry 5 times with a gap of 5 seconds between consecutive attempts if anything goes wrong while getting responses
16. Modified the responseFormatter function to produce error free output
17. Modified getResponse function to use URLSearchParam object following coding best practices
18. Eliminated the use of innerHTML for faster rendering of page and faster response
19. Improved the export button logic ie when the results container is empty you cannot export now while earlier you could export empty pdf after one successful response, we each response validates the functionality of export button each time 
